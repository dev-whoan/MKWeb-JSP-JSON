<?xml version="1.0" encoding="UTF-8"?>

<MkSQL xmlid="sql">
	<!-- 
	Child 만들어서 Child에 대한 전체 선택
	예를들어
	<sql id="api_selectUser" ... parent="yes" />
	<sql id="name" parent="api_selectUser">
		<columns>
			@name
		</columns>
		
		<query>
			SELECT name FROM User;
		</query>
	</sql>
	
	서칭할때는 parent로 서칭
	<sql id="u_class" parent="api_selectUser">
		<columns>
			@name
		</columns>
		
		<query>
			SELECT u_class FROM User;
		</query>
	</sql>
	 -->
	
	<sql id="api_selectUser" db="mkweb">
	<!-- 
	여기서 조회와 조건을 구분
	 -->
		<columns>
			@name
			@u_class
			@SEQ
		</columns>
		<where>
			@name
			@u_class
		</where>
		
		<query>
			SELECT @columns@
			FROM User as udz
			JOIN company as comp on u.name = comp.name
			@where@
		</query>
	</sql>
	
	<sql id="api_selectUserByName">
		SELECT SEQ, name, u_class
		FROM User
		WHERE name = @name@;
	</sql>
	
	
	<sql id="api_selectUserNames">
		SELECT name
		FROM User;
	</sql>
	
	<sql id="api_selectUserNamesByClass">
		SELECT name
		FROM User
		WHERE u_class = @u_class@;
	</sql>
	
	
	<!-- 
	/name/hyeonic/u_class
	 -->
	
	<sql id="api_selectAllUser" db="mkweb" allow_single="yes" allow_like="yes">
		<!-- columns which can be @CONDITION@ -->
		<columns>
			@SEQ  
			@name
			@u_class
		</columns>
		
		<query>
			SELECT SEQ, name, u_class
			FROM User;
		</query>
	</sql>
	
	<sql id="api_insertUser" db="mkweb" allow_single="yes" allow_like="yes">
		<!-- columns which can be @CONDITION@ -->
		<columns>
			@name
			@u_class
		</columns>
		
		<query>
			INSERT INTO User
			(name, u_class)
			VALUES
			(@name@, @u_class@);
		</query>
	</sql>
</MkSQL>