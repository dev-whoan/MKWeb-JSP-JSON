<?xml version="1.0" encoding="UTF-8"?>

<views>
	<!-- 페이지당 method는 6개 -->
	<!-- 페이지당 sql은 n개?-->
	<!-- method당 sql은 1개 -->
	<!-- 
	한 조건당 하나의 SQL
	
	selectUserByName
SELECT *
FROM USER
WHERE name=@name@
=> name=@name@

selectUserNameClassByName
SELECT name, u_class
FROM USER
WHERE name=@name@;
같은 정신나간 사람은 없다.
	 -->
	
	<Control name="users" debug="error" authorized="yes" post="yes" get="yes" put="yes" delete="yes" options="yes" head="yes">
		<returnStructure value="users" />
		<Service id="api_selectUserNames" type="sql">
			<Sql method="get" />
			<Parameter name="api_sel_user" />
			
			<Value>

			</Value>
		</Service>
		<!-- 
		<Service id="api_selectUser" type="sql">
			<Sql method="get" />
			<Parameter name="api_selUsers" />
			
			<Value>
			// /mk_api_key/users?name=dev.whoan
			// /mk_api_key/users/dev.whoan
			// /mk_api_key/users get
			// /mk_api_key/users/city/Bucheon/name/dev.whoan
			// /mk_api_key/users post 추가
			// /~/users/

				조회 가능하며, SQL 조건으로도 사용 가능한 모든 컬럼 

			@set(api_sel_user.name = '%')
			@set(api_sel_user.u_class = '%')
			@set(api_sel_user.SEQ = '%')
			</Value>
		</Service>
		 -->
		<Service id="api_insertUser" type="sql">
			<Sql method="post" />
			<Parameter name="api_ins_user" />
			<Value>
				@set(api_ins_user.name = '%')
				@set(api_ins_user.u_class = '%')
			</Value>
		</Service>
		<!-- 
		<Service type="sql">
			<Sql id="api_insertUser" method="post" />
			<Parameter name="api_ins_user_post" />
			<Value>
				@set(api_ins_user_post.user_name = '%')
				@set(api_ins_user_post.user_info = '%')
				@set(api_ins_user_post.user_phone = '%')
				@set(api_ins_user_post.user_location = '%')
			</Value>
		</Service>
				
		<Service type="sql">
			<Sql id="api_insertUser" method="put" />
			<Parameter name="api_ins_user_get" />
			<Value>
				@set(api_ins_user_get.user_name = '%')
				@set(api_ins_user_get.user_info = '%')
				@set(api_ins_user_get.user_phone = '%')
				@set(api_ins_user_get.user_location = '%')
			</Value>
		</Service>
		-->
	</Control>
</views>